<resources>
    <string name="app_name">Solvadoku</string>
    <string name="solve">SOLVE </string>
    <string name="steps">STEPS</string>
    <string name="pop_up_title">Choose Strategies</string>
    <string name="invalid_input">Invalid input</string>
    <string name="no_effect">The chosen strategies had no effect on the puzzle</string>
    <string name="select_cell">Select a cell to enter input</string>
    <string name="ok">OK</string>
    <string name="title">SOLVADOKU</string>

    <string name="naked_single">When a cell has only one possible candidate remaining, we call it a Naked Single. The candidate then gets inserted into the cell.</string>
    <string name="hidden_single">When a candidate that exists in a particular House (Row, Column, or Block) does not exist in any other cell in that same house, we call it a Hidden Single because it \"hides\" behind the other candidates in the cell. The candidate then gets inserted into the cell.</string>
    <string name="naked_pair">If two cells in a House (Row, Column, or Block) only have two candidates and those two candidates are identical for both cells, it is called a Naked Pair. We can remove all other appearances of the pair from the other cells in that House.</string>
    <string name="pointing_pair">When a candidate appears in only two (or three) cells in a Block and these cells are in the same Row or Column, they are called a Pointing Pair (or Pointing Triple if there are three cells). We remove the number as a candidate for all the other cells in that Row or Column..</string>
    <string name="claiming_pair">When a candidate only appears in two (or three) cells in a Row or Column and these cells are in the same Block, they are called a Claiming Pair (or Claiming Triple if there are three cells). We remove the number as a candidate from all other cells in that Block.</string>
    <string name="hidden_pair">If a pair of candidates appears in only two cells in a House (Row, Column, or Block) and those cells contain other candidates as well, they are called a Hidden Pair. We remove all candidates other than the pair from both of the two cells, which then gives us a Naked Pair.</string>
    <string name="naked_triple">If three cells in a House (Row, Column, or Block) only have the same three candidates or their subset, they are called a Naked Triple. We remove all appearances of the three candidates from the other cells in that House.</string>
    <string name="hidden_triple">When three cells in a House (Row, Column, or Block) contain the same three candidates or a subset of those three candidates but the cells also contain other candidates, it is called a Hidden Triple. Apart from the three candidates that are part of the Triple, we remove all other candidates from these three cells.</string>
    <string name="xWing">When two rows (or two columns) each contain only two cells that hold an identical candidate and this candidate must reside in both rows and share the same two columns or vice versa, it is called an X-Wing. Hence, by this logic, we can cancel out any appearances of this candidate in all other cells in those two columns.</string>
    <string name="swordfish">Swordfish is in the same strategy family as X-Wings. When three rows (or three columns) each contain only three cells that hold an identical candidate and this candidate must reside in all three rows and share the same three columns or vice versa, it is called a Swordfish. Hence, by this logic, we can cancel out any appearances of this candidate in all other cells in those three columns (or three rows).</string>
    <string name="jellyfish">Jellyfish is in the same strategy family as Swordfish and X-Wing. When four rows (or four columns) each contain only four cells that hold an identical candidate and this candidate must reside in all four rows and share the same four columns or vice versa, it is called a Jellyfish. Hence, by this logic, we can cancel out any appearances of this candidate in all other cells in those four columns (or four rows).</string>
    <string name="naked_quad">If four cells in a House (Row, Column, or Block) only have the same four candidates or their subset, they are called a Naked Quad. We remove all appearances of the four candidates from the other cells in that House.</string>
    <string name="hidden_quad">When four cells in a House (Row, Column, or Block) contain the same four candidates or a subset of those four candidates but the cells also contain other candidates, it is called a Hidden Quad. Apart from the four candidates that are part of the Quad, we remove all other candidates from these four cells.</string>
    <string name="finned_x_wing">A Finned X-Wing is a pattern that is one cell short of being an X-Wing - in other words, two columns that contain a candidate (let\'s say the candidate is C) in only two rows, except for  the so called Fin(s), and vice versa. The logic behind this technique is that if the Fin(s) is not true, then the rest of the X-Wing is. If there is a cell (or cells) with the candidate C, and both the Fin(s) and the X-Wing cause this cell to lose C as a candidate, then we can safely assume C can no longer be considered a candidate and hence remove it from this cell.</string>
    <string name="finned_swordfish">A Finned Swordfish is a pattern that is one cell short of being a Swordfish - in other words, three columns that contain a candidate (let\'s say the candidate is C) in only three rows, except for the so called Fin(s), and vice versa. The logic behind this technique is that if the Fin(s) is not true, then the rest of the Swordfish is. If there is a cell (or cells) with the candidate C, and both the Fin(s) and the Swordfish cause this cell to lose C as a candidate, then we can safely assume C can no longer be considered a candidate and hence remove it from this cell.</string>
    <string name="finned_jellyfish">A Finned Jellyfish is a pattern that is one cell short of being a Jellyfish - in other words, four columns that contain a candidate (let\'s say the candidate is C) in only four rows, except for the so called Fin(s), and vice versa. The logic behind this technique is that if the Fin(s) is not true, then the rest of the Jellyfish is. If there is a cell (or cells) with the candidate C, and both the Fin(s) and the Jellyfish cause this cell to lose C as a candidate, then we can safely assume C can no longer be considered a candidate and hence remove it from this cell.</string>
    <string name="brute_force">If all previous strategies are not successful in solving the Sudoku puzzle, Solvadoku uses Brute Force as a last resort to solve the puzzle. This method uses trial and error to solve the puzzle by computing all remaining possibilities until a logically valid solution is found.</string>

    <string name="pencil_marks">Partial solve with pencil marks</string>

    <string name="no_pencil_marks">Partial solve without pencil marks</string>

    <string name="settings">Settings and Information</string>
    <string name="title_activity_settings">SettingsActivity</string>
    <string name="about_solvadoku_text">Solvadoku\'s aim is to hand Sudoku enthusiasts the confidence to tackle harder puzzles and learn new solving strategies along the way</string>
    <string name="github_repo_text">Our project is Free and Open-Source Software!\n\nCheck out the Github Repository for Solvadoku</string>
    <string name="app_release_version">solvadoku version 2.0</string>

    <string name="about_menu_item">About Solvadoku</string>
    <string name="pencil_marks_menu_item">Toggle Pencil Marks</string>

    <string name="db_key">settings</string>

    <string name="about_solvadoku">Solvadoku\'s objective is to encourage Sudoku enthusiasts to tackle harder puzzles and learn new solving strategies along the way</string>
    <string name="app_release_version">solvadoku version 2.0</string>
    <string name="about_menu">About</string>
    <string name="github_repo_text">Our project is Free and Open-Source Software!\n\nCheck out the Github Repository for Solvadoku</string>

    <string name="cell_focus_value">%d</string>
    <string name="_1">1</string>
    <string name="_2">2</string>
    <string name="_3">3</string>
    <string name="_4">4</string>
    <string name="_5">5</string>
    <string name="_6">6</string>
    <string name="_7">7</string>
    <string name="_8">8</string>
    <string name="_9">9</string>
    <string name="empty" />

    <string name="contentDescriptionClearBoardButton">Clear the entire Sudoku board</string>
    <string name="contentDescriptionEraseButton">Erase the number entered in the cell</string>
    <string name="contentDescriptionNextCellButton">Go to the next cell</string>
    <string name="contentDescriptionChooseStrategiesButton">Choose strategies</string>
    <string name="contentDescriptionGitHubRepoButton">Link to Solvadoku GitHub Repository</string>
    <string name="contentDescriptionSolvadokuIconAboutPage">Solvadoku App Icon</string>
    <string name="contentDescriptionPencilMarksButton">Display Pencil Marks</string>
    <string name="contentDescriptionAboutButton">About the Solvadoku App</string>

</resources>